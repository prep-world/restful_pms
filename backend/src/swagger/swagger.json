{
    "openapi": "3.0.1",
    "info": {
        "title": "Parking Management System",
        "description": "API documentation for the Parking Management System",
        "version": "1.0.0",
        "contact": {
            "name": "Iradukunda Bertin",
            "email": "your.email@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:5000/api/v1"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login a user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/parking/slots": {
            "get": {
                "summary": "Get all parking slots",
                "tags": [
                    "Parking"
                ],
                "parameters": [
                    {
                        "name": "floor",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "isAvailable",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of parking slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingSlotResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new parking slot (Admin only)",
                "tags": [
                    "Parking"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingSlot"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking slot created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions"
                    }
                }
            }
        },
        "/parking/slots/{id}": {
            "get": {
                "summary": "Get parking slot by ID",
                "tags": [
                    "Parking"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking slot details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking slot not found"
                    }
                }
            },
            "patch": {
                "summary": "Update a parking slot",
                "tags": [
                    "Parking"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParkingSlotUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parking slot updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingSlotResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized"
                    }
                }
            }
        },
        "/vehicles": {
            "get": {
                "summary": "Get all vehicles for current user",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Register a new vehicle",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Plate number already exists"
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "get": {
                "summary": "Get vehicle by ID",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a vehicle",
                "tags": [
                    "Vehicles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vehicle deleted"
                    },
                    "400": {
                        "description": "Bad request - Vehicle has active bookings"
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "summary": "Get all bookings for current user",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new booking",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Booking"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Parking slot not available"
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "summary": "Get booking by ID",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            },
            "patch": {
                "summary": "Extend booking duration",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtendBooking"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking extended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cannot extend booking"
                    }
                }
            },
            "delete": {
                "summary": "Cancel a booking",
                "tags": [
                    "Bookings"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cannot cancel booking"
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "summary": "Get all payments for current user",
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Process a payment",
                "tags": [
                    "Payments"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Payment failed"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "required": ["email", "password"]
            },
            "User": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["USER", "ADMIN", "ATTENDANT"],
                        "default": "USER",
                        "example": "USER"
                    }
                },
                "required": ["firstName", "lastName", "email", "password"]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "USER"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Login successful"
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "data": {
                        "$ref": "#/components/schemas/UserResponse"
                    }
                }
            },
            "ParkingSlot": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "example": "A-101"
                    },
                    "floor": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": ["REGULAR", "COMPACT", "HANDICAP", "ELECTRIC"],
                        "example": "REGULAR"
                    }
                },
                "required": ["number", "floor", "type"]
            },
            "ParkingSlotResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "number": {
                        "type": "string",
                        "example": "A-101"
                    },
                    "floor": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "REGULAR"
                    },
                    "isAvailable": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ParkingSlotUpdate": {
                "type": "object",
                "properties": {
                    "isAvailable": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["CAR", "MOTORCYCLE", "TRUCK", "VAN"],
                        "example": "CAR"
                    }
                },
                "required": ["plateNumber", "type"]
            },
            "VehicleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "RAA123A"
                    },
                    "type": {
                        "type": "string",
                        "example": "CAR"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Booking": {
                "type": "object",
                "properties": {
                    "parkingSlotId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "vehicleId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "durationHours": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 2
                    }
                },
                "required": ["parkingSlotId", "vehicleId", "startTime", "durationHours"]
            },
            "ExtendBooking": {
                "type": "object",
                "properties": {
                    "additionalHours": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    }
                },
                "required": ["additionalHours"]
            },
            "BookingResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "parkingSlot": {
                        "$ref": "#/components/schemas/ParkingSlotResponse"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/VehicleResponse"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:00:00Z"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T10:00:00Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["ACTIVE", "COMPLETED", "CANCELLED", "OVERSTAY"],
                        "example": "ACTIVE"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "bookingId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0,
                        "example": 5000
                    },
                    "method": {
                        "type": "string",
                        "enum": ["CASH", "CARD", "MOBILE"],
                        "example": "CARD"
                    }
                },
                "required": ["bookingId", "amount", "method"]
            },
            "PaymentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655450000"
                    },
                    "booking": {
                        "$ref": "#/components/schemas/BookingResponse"
                    },
                    "amount": {
                        "type": "number",
                        "example": 5000
                    },
                    "method": {
                        "type": "string",
                        "example": "CARD"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["PENDING", "COMPLETED", "FAILED", "REFUNDED"],
                        "example": "COMPLETED"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    }
}